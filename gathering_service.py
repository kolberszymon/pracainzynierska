import pandas as pdimport osimport amazon_servicefrom configuration_file import configuration_varimport yfinance as yffrom datetime import datetime, timedelta# Max Historical Data Period in days to download from yahoo financemax_historical_data_period = {    '1m': 7,    '2m': 60,    '5m': 60,    '15m': 60,    '30m': 60,    '1h': 730}interesting_columns = ['Open', 'High', 'Low', 'Close']picked_data_period = configuration_var['picked_data_period']tickers_to_obtain = [    'EURUSD=X',    #'GBPUSD=X',    #'AUDUSD=X',    #'NZDUSD=X',    #'JPY=X',    #'EURJPY=X',    #'GBPJPY=X'    ]def create_start_end_dates(days):    current_date = datetime.today()    current_month = int(datetime.today().strftime("%m"))    start_end_dates = []    month_change = 0    for day_number in range(days):        dates = []        dates.append((current_date - timedelta(day_number)).strftime('%Y-%m-%d'))        dates.append((current_date - timedelta(day_number - 1)).strftime('%Y-%m-%d'))                if current_month != int((current_date - timedelta(day_number)).strftime('%m')):            month_change += 1            current_month -= 1                if month_change == 2:            break                start_end_dates.append(dates)            return start_end_dates    start_end_dates = create_start_end_dates(max_historical_data_period[picked_data_period])[::-1]    def gather_all_possible_data():        for ticker in tickers_to_obtain:                file_name = ticker + picked_data_period + ".csv"        if not amazon_service.check_if_file_exist(file_name):                  history = []            currency = yf.Ticker(ticker)                        for dates in start_end_dates:                start = dates[0]                end = dates[1]                history.append(currency.history(interval=picked_data_period, start=start, end=end))                        for i in range(len(history)):                history[i] = history[i][interesting_columns]                            history = pd.concat(history)            history.to_csv(file_name)                        amazon_service.save_file(file_name)                        os.remove(file_name)                    else:                        print("File already exists")    def gather_previous_day_data():        for ticker in tickers_to_obtain:                history = []        currency = yf.Ticker(ticker)                history.append(currency.history(interval=picked_data_period, period='1d'))                for i in range(len(history)):            history[i] = history[i][interesting_columns]                            history = pd.concat(history)        file_name = ticker + ".csv"                        amazon_service.append_to_csv(file_name, history)          gather_all_possible_data()
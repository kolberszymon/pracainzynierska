import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import math
from keras.models import Sequential
from keras.models import load_model
from keras.layers import Dense
from keras.layers import LSTM
from keras.layers import Dropout
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error
import amazon_service

df = amazon_service.get_csv_data_from_amazon('EURUSD=X')
df.columns = ['Date', 'Open', 'High', 'Low', 'Close']

#Preparing the data

x = df.filter(['Open', 'High', 'Low'])
y = df.filter(['Close'])

#Data Normalization

scaler = MinMaxScaler(feature_range=(0,1))

x = scaler.fit_transform(x)
y = scaler.fit_transform(y)

x_samples = []
y_samples = []

#We set sample_length to 30 x 2 minutes so its one hour


sample_length = 30
number_of_possible_samples = math.floor(len(x) / sample_length)

for i in range(sample_length, len(x)):
    x_sample = x[i-sample_length:i]
    y_sample = y[i]
    
    x_samples.append(x_sample)
    y_samples.append(y_sample)
    
x_samples = np.array(x_samples, dtype='object')
y_samples = np.array(y_samples, dtype='object')


x_samples = x_samples.reshape(x_samples.shape[0], x_samples.shape[1], 3)
#y_samples = y_samples.reshape(y_samples.shape[0], y_samples.shape[1], 1)

#Splitting data into training set and testing set

train_range = 0.75
test_range = 1 - train_range

train_size = int(len(x_samples) * train_range)

x_samples_train = x_samples[:train_size]
y_samples_train = y_samples[:train_size]


x_samples_test = x_samples[train_size:]
y_samples_test = y_samples[train_size:]

print('Accuracy: %.2f' % (accuracy*100))

X = x_samples_test[0]
Y = y_samples_test[0]
yhat = model.predict(X)
print(yhat)
print(Y)
